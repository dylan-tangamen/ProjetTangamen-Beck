openapi: 3.0.0
info:
  title: Profile Service
  description: Manage profiles
  version: 0.0.1
  
servers:
  - url: http://localhost:8080
  
paths:
  /PS/profiles:
    get:
      summary: Returns a list of all profiles.
      responses:
        '200':
          description: All profiles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Profile'
    put:
      summary: Create a profile
      requestBody:
        description: The profile object, might omit the ID
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
      responses:
        '200':
          description: The profile was created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        '409':
          description: The email address is already in use
        '403':
          description: The object was not valid
  /PS/profiles/{id}:
    parameters:
        - name: id
          in: path
          description: ID of the profile
          required: true
          schema:
            type: integer
    get:
      description: return a single profile
      responses:
          '200':
            description: The profile
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Profile'
          '404':
            description: The profile does not exist
    delete:
      description: Delete a profile
      responses:
        '200':
          description: The profile was deleted
        '404':
          description: the profile does not exist
  /PS/profiles/{id}/name:
    parameters:
     - name: id
       in: path
       description: ID of the profile
       required: true
       schema:
        type: integer
    get:
      description: return the name of the profile user
      responses:
        '200':
          description: the name
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        '404':
          description: The profile does not exist
    put:
      description: change the name of the profile user
      requestBody:
        description: the new name
        content:
          text/plain:
            schema:
              type: string
              example: "Dylan"
        required: true
      responses:
        '200':
          description: The name has been changed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        '404':
          description: The profile does not exist
  /PS/profiles/{id}/email:
    parameters:
     - name: id
       in: path
       description: ID of the profile
       required: true
       schema:
        type: integer
    get:
      description: return the email of the profile user
      responses:
        '200':
          description: the email
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        '404':
          description: The profile does not exist
    put:
      description: change the email of the profile user
      requestBody:
        description: the new email
        content:
          text/plain:
            schema:
              type: string
              example: "Dylan@orange.fr"
        required: true
      responses:
        '200':
          description: The email has been changed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        '404':
          description: The profile does not exist
  /PS/profiles/{id}/description:
    parameters:
     - name: id
       in: path
       description: ID of the profile
       required: true
       schema:
        type: integer
    get:
      description: return the description of the profile
      responses:
        '200':
          description: the descriprion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        '404':
          description: The profile does not exist
    put:
      description: change the description of the profile user
      requestBody:
        description: the new description
        content:
          text/plain:
            schema:
              type: string
              example: "c'est la nouvelle description"
        required: true
      responses:
        '200':
          description: The description has been changed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        '404':
          description: The profile does not exist
  
components:
  schemas:
    Profile:
      type: object
      properties:
        id: 
          type: integer
          example: 4
        name: 
          type: string
          example: RÃ©mi
        email:
          type: string
          format: email
          example: test@orange.fr
        description:
          type: string
          example: ceci est un exemple
      required:
        - name
        - email